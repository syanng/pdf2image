{"version":3,"sources":["App.js","index.js"],"names":["PDFJS","window","pdfjsLib","App","_React$useState","React","useState","_React$useState2","_slicedToArray","pdf","setPdf","_React$useState3","_React$useState4","setWidth","_React$useState5","_React$useState6","images","setImages","_React$useState7","_React$useState8","setHeight","_React$useState9","_React$useState10","_React$useState11","_React$useState12","currentPage","_React$useState13","_React$useState14","pdfRendering","setPdfRendering","_React$useState15","_React$useState16","pageRendering","setPageRendering","_showPdf","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","file","uri","_PDF_DOC","wrap","_context","prev","next","target","files","URL","createObjectURL","getDocument","url","sent","document","getElementById","value","t0","alert","message","stop","apply","arguments","_renderPage","_callee2","imagesList","canvas","i","page","viewport","render_context","img","_context2","createElement","setAttribute","querySelector","numPages","getPage","getViewport","scale","height","width","canvasContext","getContext","console","log","render","promise","toDataURL","push","useEffect","renderPage","styles","wrapper","display","flexDirection","justifyContent","alignItems","gap","imageWrapper","border","borderRadius","boxShadow","padding","_jsxs","className","children","_jsx","id","onClick","click","type","accept","hidden","onChange","_x","style","map","image","idx","src","alt","margin","rootElement","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c90ac4fa.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst PDFJS = window.pdfjsLib;\n\nexport default function App() {\n  const [pdf, setPdf] = React.useState(\"\");\n  const [width, setWidth] = React.useState(0);\n  const [images, setImages] = React.useState([]);\n  const [height, setHeight] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(1);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [pdfRendering, setPdfRendering] = React.useState(\"\");\n  const [pageRendering, setPageRendering] = React.useState(\"\");\n\n  async function showPdf(event) {\n    try {\n      setPdfRendering(true);\n      const file = event.target.files[0];\n      const uri = URL.createObjectURL(file);\n      var _PDF_DOC = await PDFJS.getDocument({ url: uri });\n      setPdf(_PDF_DOC);\n      setPdfRendering(false);\n      document.getElementById(\"file-to-upload\").value = \"\";\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  // function changePage() {\n  //   setCurrentPage();\n  // }\n\n  async function renderPage() {\n    setPageRendering(true);\n    const imagesList = [];\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"className\", \"canv\");\n    let canv = document.querySelector(\".canv\");\n\n    for (let i = 1; i <= pdf.numPages; i++) {\n      var page = await pdf.getPage(i);\n      var viewport = page.getViewport({ scale: 1 });\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      var render_context = {\n        canvasContext: canvas.getContext(\"2d\"),\n        viewport: viewport\n      };\n      console.log(\"page lenght\", pdf.numPages);\n      setWidth(viewport.width);\n      setHeight(viewport.height);\n      await page.render(render_context).promise;\n      let img = canvas.toDataURL(\"image/png\");\n      imagesList.push(img);\n    }\n    setImages(imagesList);\n    setPageRendering(false);\n  }\n\n  useEffect(() => {\n    pdf && renderPage();\n    // eslint-disable-next-line\n  }, [pdf, currentPage]);\n\n  const styles = {\n    wrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"5px\"\n    },\n    imageWrapper: {\n      // width: \"300px\",\n      // height: \"350px\",\n      border: \"1px solid rgba(0,0,0,0.15)\",\n      borderRadius: \"3px\",\n      boxShadow: \"0 2px 5px 0 rgba(0,0,0,0.25)\",\n      padding: \"0\"\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button\n        id=\"upload-button\"\n        onClick={() => document.getElementById(\"file-to-upload\").click()}\n      >\n        Select PDF\n      </button>\n      <input\n        type=\"file\"\n        id=\"file-to-upload\"\n        accept=\"application/pdf\"\n        hidden\n        onChange={showPdf}\n      />\n      <div id=\"pdf-main-container\">\n        <div id=\"pdf-loader\" hidden={!pdfRendering}>\n          Loading document ...\n        </div>\n        {/* <div id=\"page-count-container\">\n          Page {currentPage} of <div id=\"pdf-total-pages\">{totalPages}</div>\n        </div> */}\n        <div id=\"pdf-contents\">\n          {/* <div id=\"pdf-meta\">\n            <div id=\"pdf-buttons\">\n              <button id=\"pdf-prev\" onClick={() => changePage(currentPage - 1)}>\n                Previous\n              </button>\n              <button id=\"pdf-next\" onClick={() => changePage(currentPage + 1)}>\n                Next\n              </button>\n            </div>\n          </div> */}\n          <div id=\"image-convas-row\">\n            {/* <canvas id=\"pdf-canvas\" width={width} height={height}></canvas> */}\n            <div style={styles.wrapper}>\n              {images.map((image, idx) => (\n                <div key={idx} style={styles.imageWrapper}>\n                  <img\n                    id=\"image-generated\"\n                    src={image}\n                    alt=\"pdfImage\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      margin: \"0\",\n                      border: \"none\"\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div id=\"page-loader\" hidden={!pageRendering}>\n            Loading page ...\n          </div>\n          {/* <button>Show PNG</button>\n          <button>Download PNG</button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}